# Create this file in the root of your project: netlify.toml

[build]
  command = "echo 'No build command specified'"
  publish = "."
  functions = "netlify/functions"

[functions]
  included_files = ["*.json"]

[[redirects]]
  from = "/resume.json"
  to = "/404.html"
  status = 404

[[redirects]]
  from = "/projects.json"
  to = "/404.html"
  status = 404

[[redirects]]
  from = "/blogs.json"
  to = "/404.html"
  status = 404

# Redirects and Rewrites (Optional, but good to know)
# Example: Redirect all www to non-www
# [[redirects]]
#  from = "https://www.yourdomain.com/*"
#  to = "https://yourdomain.com/:splat"
#  status = 301
#  force = true

# Custom HTTP Headers for Security & Privacy
[[headers]]
  # Apply these headers to all paths served by Netlify
  for = "/*"
  [headers.values]
    # Content Security Policy (CSP)
    # This can complement or replace the CSP meta tag in your index.html.
    # Headers are generally more flexible and can be updated without redeploying HTML.
    # Ensure this matches or is stricter than your meta tag CSP.
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data:;"
    # Note: If you use the CSP header here, you might remove the meta tag from index.html to avoid redundancy,
    # but having both is not harmful (the stricter of the two will apply).
    # The 'unsafe-inline' for style-src might be needed if you have any inline styles that are not covered by hashes/nonces (your current project seems to avoid complex inline styles).
    # For your current setup, the meta tag CSP is fine. If you choose to use the header CSP, ensure it's correctly configured.

    # Prevents your site from being rendered in an iframe/frame/object (clickjacking protection)
    X-Frame-Options = "DENY"

    # Prevents browsers from trying to guess the content type, reducing XSS risk
    X-Content-Type-Options = "nosniff"

    # Controls how much referrer information is sent with requests
    Referrer-Policy = "strict-origin-when-cross-origin"

    # Permissions Policy (formerly Feature Policy)
    # Explicitly disable features not needed by your site.
    # Example: Deny access to microphone, camera, geolocation, etc.
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"

    # HTTP Strict Transport Security (HSTS)
    # Tells browsers to always connect to your site via HTTPS.
    # Start with a smaller max-age for testing, e.g., max-age=300.
    # Once confident, increase it. 'preload' is a bigger commitment.
    Strict-Transport-Security = "max-age=31536000; includeSubDomains" # 1 year

    # X-XSS-Protection (Largely deprecated by modern CSP, but harmless for older browser support)
    X-XSS-Protection = "1; mode=block" 