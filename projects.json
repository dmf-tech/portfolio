[
  {
    "id": "project-alpha",
    "featured": true,
    "title": "Responsive E-commerce Website",
    "filterClasses": "web-app ui-ux",
    "imageSrcs": [
      "/img/feature_project1.png",
      "/img/feature_project2.png",
      "/img/feature_project3.png",
      "/img/feature_project4.png",
      "/img/feature_project5.png"
    ],
    "categories": ["Web App", "UI/UX"],
    "shortDescription": "A responsive e-commerce platform designed for a curated collection of timepieces, featuring dynamic product catalogs and efficient multi-step checkout.",
    "technologies": ["Vue.js", "Tailwind CSS", "Node.js", "MongoDB", "Redis", "Docker"],
    "githubUrl": "#",
    "liveUrl": "#",
    "modalData": {
      "description": "Developed \"Demure Montres,\" an e-commerce platform for timepieces, focusing on seamless customer journeys from dynamic catalogs to efficient checkout. The platform serves both customers and administrators with intuitive interfaces and robust functionality.",
      "features": "<li>Dynamic product catalog with advanced filtering and search</li><li>Real-time inventory management system</li><li>Secure payment processing with multiple gateway support</li><li>Comprehensive admin dashboard with analytics</li><li>Customer account management and order tracking</li>",
      "technicalDetails": "Built with a modern tech stack including Vue.js for the frontend and Node.js for the backend. Implements a microservices architecture for scalability, with separate services for product management, user authentication, and order processing. Uses MongoDB for flexible data storage and Redis for caching and session management.",
      "implementation": "Followed an agile development approach with continuous integration/deployment using GitHub Actions. Implemented responsive design principles and progressive enhancement for broad device support. Used Docker containers for consistent development and deployment environments. Integrated automated testing with Jest and Cypress for reliability.",
      "gallery": [
        {
          "src": "/img/feature_project1.png",
          "alt": "E-commerce Homepage",
          "caption": "Modern and intuitive homepage design with featured products"
        },
        {
          "src": "/img/feature_project2.png",
          "alt": "Product Catalog",
          "caption": "Dynamic product catalog with advanced filtering options"
        },
        {
          "src": "/img/feature_project3.png",
          "alt": "Shopping Cart",
          "caption": "Streamlined shopping cart with real-time updates"
        },
        {
          "src": "/img/feature_project4.png",
          "alt": "Checkout Process",
          "caption": "Secure and intuitive multi-step checkout process"
        },
        {
          "src": "/img/feature_project5.png",
          "alt": "Admin Dashboard",
          "caption": "Comprehensive admin dashboard with analytics"
        }
      ]
    }
  },
  {
    "id": "project-beta",
    "title": "Fitness Tracker Pro",
    "filterClasses": "mobile-app",
    "imageSrcs": [
      "/img/mobile_project1.jpg",
      "/img/placeholder-mobile2.jpg",
      "/img/placeholder-mobile3.jpg",
      "/img/placeholder-mobile4.jpg",
      "/img/placeholder-mobile5.jpg"
    ],
    "categories": ["Mobile App"],
    "shortDescription": "A comprehensive fitness tracking application leveraging AI for personalized workout plans, real-time form correction, and health analytics.",
    "technologies": ["Swift", "Kotlin", "Firebase", "CoreML", "TensorFlow Lite", "HealthKit", "Google Fit API"],
    "githubUrl": "#",
    "liveUrl": "#",
    "modalData": {
      "description": "Fitness Tracker Pro is a cross-platform mobile application that revolutionizes personal fitness tracking through AI-powered insights and real-time feedback. The app provides personalized workout plans, nutrition tracking, and social features while leveraging device sensors and machine learning for accurate exercise form correction.",
      "features": "<li>AI-powered workout plan generation based on user goals and progress</li><li>Real-time exercise form analysis using device camera</li><li>Integration with HealthKit and Google Fit for comprehensive health tracking</li><li>Social features including workout sharing and community challenges</li><li>Personalized nutrition planning with meal tracking</li>",
      "technicalDetails": "Developed native applications using Swift for iOS and Kotlin for Android, with shared business logic through Kotlin Multiplatform. Implemented CoreML and TensorFlow Lite for on-device machine learning capabilities, ensuring privacy-first approach to user data. Utilized Firebase for backend services including real-time database, authentication, and analytics.",
      "implementation": "Adopted MVVM architecture with clean architecture principles for maintainable and testable code. Implemented comprehensive CI/CD pipeline using Fastlane for automated testing and deployment. Used Protocol-Oriented Programming in Swift and Interface-based development in Kotlin for maximum code reuse and flexibility.",
      "gallery": [
        {
          "src": "/img/mobile_project1.jpg",
          "alt": "Fitness Dashboard",
          "caption": "AI-powered fitness dashboard with personalized recommendations"
        },
        {
          "src": "/img/placeholder-mobile2.jpg",
          "alt": "Form Analysis",
          "caption": "Real-time exercise form analysis and correction"
        },
        {
          "src": "/img/placeholder-mobile3.jpg",
          "alt": "Nutrition Tracking",
          "caption": "Comprehensive nutrition tracking and meal planning"
        },
        {
          "src": "/img/placeholder-mobile4.jpg",
          "alt": "Social Features",
          "caption": "Community features and workout sharing"
        },
        {
          "src": "/img/placeholder-mobile5.jpg",
          "alt": "Progress Analytics",
          "caption": "Detailed progress tracking and analytics"
        }
      ]
    }
  },
  {
    "id": "project-gamma",
    "title": "Analysis Toolkit",
    "filterClasses": "data-science",
    "imageSrcs": [
      "/img/ds_project1.jpg",
      "/img/placeholder-ds2.jpg",
      "/img/placeholder-ds3.jpg",
      "/img/placeholder-ds4.jpg",
      "/img/placeholder-ds5.jpg"
    ],
    "categories": ["Data Science"],
    "shortDescription": "A comprehensive business intelligence platform that unifies file, website, and text analysis into a single AI-powered web application, reducing analysis time by 70% through advanced data processing and interactive visualizations.",
    "technologies": ["Python", "Streamlit", "NumPy", "Pandas", "TextBlob", "Groq API", "Altair", "Matplotlib"],
    "githubUrl": "#",
    "liveUrl": "#",
    "modalData": {
      "description": "Analysis Toolkit is an enterprise-grade business analysis platform built with Python and Streamlit that seamlessly processes diverse data sources including files (CSV, Excel, PDF), websites, and text content. The platform combines AI-powered insights with interactive visualizations and enterprise-level security to deliver actionable intelligence through an intuitive web interface. Designed for both technical and non-technical users, it eliminates the need for multiple specialized tools while ensuring robust data processing and comprehensive analytical capabilities.",
      "features": "<li>Multi-domain analysis supporting files, websites, and text processing</li><li>AI-enhanced insights through Groq API integration</li><li>Interactive visualizations with real-time charts and dashboards</li><li>Enterprise-grade security with multi-layer validation</li><li>70% reduction in analysis time through streamlined workflows</li>",
      "technicalDetails": "Built with Python and Streamlit for a robust web interface, utilizing NumPy and Pandas for data processing. Integrates TextBlob for natural language processing and Groq API for advanced machine learning capabilities. Features Altair and Matplotlib for interactive data visualizations, all wrapped in a modular architecture for scalability.",
      "implementation": "Implemented a modular architecture focusing on security and scalability. Integrated comprehensive audit logging and secure data processing protocols. Developed custom data processing pipelines for various file formats and web scraping capabilities. Established real-time visualization updates and interactive dashboard components.",
      "gallery": [
        {
          "src": "/img/ds_project1.jpg",
          "alt": "Analysis Dashboard",
          "caption": "Main analysis dashboard with real-time visualizations"
        },
        {
          "src": "/img/placeholder-ds2.jpg",
          "alt": "Multi-Domain Analysis",
          "caption": "Unified interface for file, website, and text analysis"
        },
        {
          "src": "/img/placeholder-ds3.jpg",
          "alt": "AI Insights",
          "caption": "AI-powered analysis and insights generation"
        },
        {
          "src": "/img/placeholder-ds4.jpg",
          "alt": "Data Processing",
          "caption": "Advanced data processing and transformation tools"
        },
        {
          "src": "/img/placeholder-ds5.jpg",
          "alt": "Security Features",
          "caption": "Enterprise security and audit logging interface"
        }
      ]
    }
  },
  {
    "id": "project-delta",
    "title": "WebAssembly Image Studio",
    "filterClasses": "other web-app",
    "imageSrcs": [
      "/img/website_project1.jpg",
      "/img/placeholder-web2.jpg",
      "/img/placeholder-web3.jpg",
      "/img/placeholder-web4.jpg",
      "/img/placeholder-web5.jpg"
    ],
    "categories": ["Web App", "Other"],
    "shortDescription": "A high-performance image processing application leveraging WebAssembly and Rust for near-native speed in the browser, featuring real-time filters, batch processing, and advanced image manipulation tools.",
    "technologies": ["Rust", "WebAssembly", "JavaScript", "Canvas API", "Web Workers", "IndexedDB", "Service Workers"],
    "githubUrl": "#",
    "liveUrl": "#",
    "modalData": {
      "description": "WebAssembly Image Studio is a cutting-edge web application that brings desktop-level image processing performance to the browser. Built with Rust and compiled to WebAssembly, it delivers exceptional performance while maintaining a smooth user experience. The application supports complex image manipulations, batch processing, and custom filter creation, all while running entirely in the browser.",
      "features": "<li>High-performance image processing using Rust and WebAssembly</li><li>Real-time filter preview and application</li><li>Batch processing with progress tracking</li><li>Custom filter creation and sharing</li><li>Offline processing support via Service Workers</li>",
      "technicalDetails": "Core image processing algorithms implemented in Rust and compiled to WebAssembly for optimal performance. Utilizes Web Workers for concurrent processing and the Canvas API for image manipulation. Features IndexedDB for local storage and Service Workers for offline functionality. Implements custom memory management for handling large images efficiently.",
      "implementation": "Adopted a hybrid architecture using Rust for computation-heavy tasks and JavaScript for UI interactions. Implemented progressive enhancement for browsers without WebAssembly support. Developed custom memory management system for large image processing. Created automated benchmarking system for performance optimization.",
      "gallery": [
        {
          "src": "/img/website_project1.jpg",
          "alt": "Main Interface",
          "caption": "Main image processing interface with real-time preview"
        },
        {
          "src": "/img/placeholder-web2.jpg",
          "alt": "Filter Gallery",
          "caption": "Extensive filter gallery with custom options"
        },
        {
          "src": "/img/placeholder-web3.jpg",
          "alt": "Batch Processing",
          "caption": "Efficient batch processing interface"
        },
        {
          "src": "/img/placeholder-web4.jpg",
          "alt": "Custom Filters",
          "caption": "Custom filter creation and sharing platform"
        },
        {
          "src": "/img/placeholder-web5.jpg",
          "alt": "Performance Metrics",
          "caption": "Real-time performance monitoring dashboard"
        }
      ]
    }
  },
  {
    "id": "project-epsilon",
    "title": "Predictive Analytics Engine",
    "filterClasses": "data-science machine-learning",
    "imageSrcs": [
      "/img/ds_project1.jpg",
      "/img/placeholder-ml2.jpg",
      "/img/placeholder-ml3.jpg",
      "/img/placeholder-ml4.jpg",
      "/img/placeholder-ml5.jpg"
    ],
    "categories": ["Data Science", "Machine Learning"],
    "shortDescription": "A sophisticated machine learning platform that automates the entire ML pipeline from data preprocessing to model deployment.",
    "technologies": ["Python", "TensorFlow", "scikit-learn", "MLflow", "Docker", "Kubernetes"],
    "githubUrl": "#",
    "liveUrl": "#",
    "modalData": {
      "description": "An enterprise-grade machine learning platform that automates and streamlines the entire ML lifecycle. The system handles everything from data preprocessing to model deployment, making advanced analytics accessible to organizations of all sizes.",
      "features": "<li>Automated feature engineering and selection</li><li>Intelligent model selection and tuning</li><li>Real-time performance monitoring</li><li>Model versioning and A/B testing</li><li>Automated model retraining</li>",
      "technicalDetails": "Built on a microservices architecture using Python for the core ML components. Utilizes TensorFlow and scikit-learn for model training, MLflow for experiment tracking, and Kubernetes for orchestration. Implements custom algorithms for automated feature engineering and model selection.",
      "implementation": "Followed MLOps best practices with automated testing and deployment pipelines. Implemented a modular architecture for easy extension and maintenance. Used Docker containers for reproducible environments and Kubernetes for scalable deployment.",
      "gallery": [
        {
          "src": "/img/ds_project1.jpg",
          "alt": "ML Pipeline Dashboard",
          "caption": "Machine learning pipeline overview"
        },
        {
          "src": "/img/placeholder-ml2.jpg",
          "alt": "Model Selection",
          "caption": "Automated model selection interface"
        },
        {
          "src": "/img/placeholder-ml3.jpg",
          "alt": "Feature Engineering",
          "caption": "Advanced feature engineering tools"
        },
        {
          "src": "/img/placeholder-ml4.jpg",
          "alt": "Performance Monitoring",
          "caption": "Real-time model performance monitoring"
        },
        {
          "src": "/img/placeholder-ml5.jpg",
          "alt": "Deployment Dashboard",
          "caption": "Model deployment and versioning system"
        }
      ]
    }
  }
] 