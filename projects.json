[
  {
    "id": "project-alpha",
    "featured": true,
    "title": "Responsive E-commerce Website",
    "filterClasses": "web-app ui-ux",
    "imageSrcs": [
      "/img/feature_project1.png",
      "/img/feature_project2.png",
      "/img/feature_project3.png",
      "/img/feature_project4.png",
      "/img/feature_project5.png"
    ],
    "categories": ["Web App", "UI/UX"],
    "shortDescription": "Full-stack e-commerce platform built with Vue.js and Node.js, featuring real-time inventory management, secure payment processing, and comprehensive admin dashboard with analytics.",
    "technologies": [
      "Vue.js", "Tailwind CSS", "JavaScript",
      "Node.js", "Express.js", "MongoDB", 
      "Redis", "Docker", "Payment Integration"
    ],
    "githubUrl": "https://github.com/DMcloud022",
    "liveUrl": "#",
    "modalData": {
      "description": "A full-stack e-commerce platform built with Vue.js, Node.js, Express.js, and MongoDB, designed for luxury timepieces and retail products. The system provides seamless shopping experiences with dynamic product catalogs, real-time inventory tracking, secure payment processing, and comprehensive administrative tools. Features include advanced filtering, customer account management, order tracking, and analytics dashboards for business insights.",
      "features": "<li>Dynamic product catalog with advanced filtering and search</li><li>Real-time inventory management system</li><li>Secure payment processing with multiple gateway support</li><li>Comprehensive admin dashboard with analytics</li><li>Customer account management and order tracking</li>",
      "technicalDetails": "Frontend built with Vue.js 3 and Tailwind CSS, implementing component-based architecture and reactive user interfaces. Backend powered by Node.js and Express.js with RESTful API architecture. MongoDB used for flexible document storage with optimized queries, and Redis implemented for caching and session management. Docker containers ensure consistent development and deployment environments.",
      "implementation": "Developed using agile methodology with CI/CD pipeline through GitHub Actions. Implemented responsive design with mobile-first approach ensuring seamless experience across all devices. Automated testing integrated with Jest for unit testing and Cypress for end-to-end testing. Payment gateway integration supports multiple providers for secure transaction processing.",
      "gallery": [
        {
          "src": "/img/feature_project1.png",
          "alt": "E-commerce Homepage",
          "caption": "Modern and intuitive homepage design with featured products"
        },
        {
          "src": "/img/feature_project2.png",
          "alt": "Product Catalog",
          "caption": "Dynamic product catalog with advanced filtering options"
        },
        {
          "src": "/img/feature_project3.png",
          "alt": "Shopping Cart",
          "caption": "Streamlined shopping cart with real-time updates"
        },
        {
          "src": "/img/feature_project4.png",
          "alt": "Checkout Process",
          "caption": "Secure and intuitive multi-step checkout process"
        },
        {
          "src": "/img/feature_project5.png",
          "alt": "Admin Dashboard",
          "caption": "Comprehensive admin dashboard with analytics"
        }
      ]
    }
  },
  {
    "id": "project-delta",
    "title": "Human Resources Information System",
    "filterClasses": "web-app",
    "imageSrcs": [
      "/img/hris1.png",
      "/img/hris2.png",
      "/img/hris3.png",
      "/img/hris4.png"
    ],
    "categories": ["Web App"],
    "shortDescription": "Full-stack HRIS built with Laravel and Vue.js, featuring complete employee management, automated payroll processing, real-time attendance tracking, and comprehensive analytics dashboard.",
    "technologies": [
      "Vue.js", "Laravel", "PHP", "JavaScript",
      "MySQL", "Bootstrap", "Chart.js",
      "JWT Authentication", "Docker"
    ],
    "githubUrl": "https://github.com/DMcloud022",
    "liveUrl": "#",
    "modalData": {
      "description": "A comprehensive Human Resource Information System (HRIS) built with Laravel and Vue.js, designed to streamline HR operations for modern organizations. The system provides end-to-end employee lifecycle management from onboarding to offboarding, automated payroll processing with tax calculations, real-time attendance tracking, performance evaluation systems, and advanced analytics dashboards. Features role-based access control, leave management workflows, document management, and comprehensive reporting capabilities.",
      "features": "<li>Complete employee lifecycle management from onboarding to offboarding</li><li>Automated payroll processing with tax calculations and deductions</li><li>Real-time attendance tracking with biometric integration support</li><li>Performance evaluation system with customizable review cycles</li><li>Advanced HR analytics and reporting dashboard</li><li>Leave management with approval workflows</li><li>Document management system for HR records</li><li>Role-based access control for different user levels</li>",
      "technicalDetails": "Frontend built with Vue.js 3 using Composition API for reactive interfaces and component-based architecture. Backend powered by Laravel 10 with RESTful API architecture and JWT authentication for secure user sessions. MySQL database with optimized queries and proper indexing for efficient data retrieval. Integrated Chart.js for data visualization, Bootstrap for responsive layouts, and Docker for containerized deployment.",
      "implementation": "Developed with separation of concerns architecture using Vue.js frontend and Laravel API backend. Implemented comprehensive authentication and authorization with role-based access control (RBAC). Utilized Laravel Eloquent ORM for efficient database operations and Vue Router for client-side navigation. Deployed with Docker containers ensuring consistent environments, with automated CI/CD pipeline for streamlined deployment.",
      "gallery": [
        {
          "src": "/img/hris1.png",
          "alt": "HR Dashboard",
          "caption": "Comprehensive HR dashboard with key metrics and analytics"
        },
        {
          "src": "/img/hris2.png",
          "alt": "Employee Management",
          "caption": "Employee profile management and organizational structure"
        },
        {
          "src": "/img/hris3.png",
          "alt": "Payroll System",
          "caption": "Automated payroll processing and salary management"
        },
        {
          "src": "/img/hris4.png",
          "alt": "Attendance Tracking",
          "caption": "Real-time attendance monitoring and reporting"
        }
      ]
    }
  },
  {
    "id": "project-biblioteca",
    "title": "Biblioteca - Digital Library Management System",
    "filterClasses": "web-app",
    "imageSrcs": [],
    "categories": ["Web App"],
    "shortDescription": "Comprehensive digital library management system designed to eliminate barriers to educational resources. Features automated book browsing, borrowing, and return workflows with secure user account management and real-time inventory tracking.",
    "technologies": [
      "PHP", "MySQL", "JavaScript",
      "HTML5", "CSS3", "RESTful API"
    ],
    "githubUrl": "https://github.com/DMcloud022",
    "liveUrl": "#",
    "modalData": {
      "description": "Biblioteca is an innovative digital library management system engineered to democratize access to educational resources. The platform addresses critical challenges in academic resource accessibility by providing students and faculty members with a seamless, cost-free solution for discovering, borrowing, and managing library materials. Built with scalability and user experience in mind, Biblioteca transforms traditional library operations into an efficient digital ecosystem that eliminates physical barriers and streamlines resource acquisition processes.",
      "features": "<li>Advanced book browsing system with comprehensive search and filtering capabilities</li><li>Automated book borrowing workflow with real-time availability tracking</li><li>Intelligent return management system with automated due date tracking</li><li>Secure user authentication and account management system</li><li>Personalized borrowing history and book tracking dashboard</li><li>Role-based access control for students and faculty members</li><li>Real-time inventory management and availability status</li><li>Responsive design ensuring seamless access across all devices</li>",
      "technicalDetails": "Developed using PHP for server-side logic with object-oriented programming principles. MySQL database architecture with optimized queries and proper indexing for high-performance book catalog searches. RESTful API design enables seamless integration with future mobile applications. Frontend built with modern JavaScript (ES6+) and responsive CSS3 for optimal user experience across desktop and mobile platforms.",
      "implementation": "Implemented with a focus on security and performance, utilizing prepared statements for SQL operations to prevent injection attacks. User session management implemented with secure authentication protocols. The system architecture follows MVC patterns ensuring maintainable and scalable codebase. Database schema designed with normalization principles for efficient data storage and retrieval.",
      "gallery": []
    }
  },
  {
    "id": "project-lira",
    "title": "LIRA - Intelligent Dialogue Management and Trainable Customer Service",
    "filterClasses": "mobile-app ai-ml",
    "imageSrcs": [],
    "categories": ["Mobile App", "AI/ML"],
    "shortDescription": "Enterprise-grade intelligent chatbot system powered by Dialogflow, machine learning, and natural language processing. Delivers personalized customer service automation with trainable conversation management and seamless business system integration.",
    "technologies": [
      "Flutter", "Dart", "Dialogflow",
      "Machine Learning", "NLP", "Android Studio",
      "REST API", "Firebase"
    ],
    "githubUrl": "https://github.com/DMcloud022",
    "liveUrl": "#",
    "modalData": {
      "description": "LIRA is an advanced Dialogue Management Application System that revolutionizes customer service through intelligent conversational AI. Built with cutting-edge natural language processing and machine learning technologies, LIRA provides businesses with a customizable, trainable chatbot solution that seamlessly integrates with existing systems. The platform delivers personalized, context-aware responses tailored to specific business domains, enabling 24/7 customer support while reducing operational overhead. LIRA's adaptive learning capabilities continuously improve customer interactions through data-driven insights and user feedback, ensuring exceptional service quality and customer satisfaction.",
      "features": "<li>Intelligent dialogue management system with context retention and conversation flow control</li><li>Trainable machine learning models that improve through user interactions</li><li>Advanced natural language processing for accurate intent recognition and entity extraction</li><li>Customizable response templates tailored to specific business products and services</li><li>Seamless integration with existing business systems and databases</li><li>Comprehensive analytics dashboard for conversation insights and performance metrics</li><li>Multi-platform support with Flutter for iOS and Android deployment</li><li>Scalable architecture supporting high-volume customer inquiries</li>",
      "technicalDetails": "Built with Flutter and Dart for cross-platform mobile application development, ensuring consistent user experiences across iOS and Android. Integrated Google Dialogflow for advanced natural language understanding and intent classification. Machine learning algorithms implemented for continuous learning from conversation patterns and user feedback. RESTful API architecture enables seamless backend integration with business systems and databases. Firebase integration for real-time data synchronization and cloud-based infrastructure.",
      "implementation": "Developed following agile methodology with iterative improvements based on user testing and feedback. Dialogflow integration configured with custom training data and entity recognition for domain-specific conversations. Machine learning models trained on historical customer service data to improve response accuracy and relevance. Implemented robust error handling and fallback mechanisms for edge cases. Comprehensive testing framework ensures high-quality conversational experiences across diverse user scenarios and business contexts.",
      "gallery": []
    }
  }
] 